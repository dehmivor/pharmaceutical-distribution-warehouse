const nodemailer = require('nodemailer');
const mailConfig = require('../config/mail.config');

const createTransporter = () => {
  return nodemailer.createTransport(mailConfig);
};

const sendOTPEmail = async (email, otp) => {
  try {
    const transporter = createTransporter();

    const mailOptions = {
      from: process.env.EMAIL_USER, // S·ª≠ d·ª•ng bi·∫øn m√¥i tr∆∞·ªùng
      to: email,
      subject: 'M√£ x√°c th·ª±c ƒëƒÉng nh·∫≠p',
      html: `<h2>M√£ OTP: ${otp}</h2>`,
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email sent successfully');
    return result;
  } catch (error) {
    console.error('‚ùå Email error:', error);
    throw error;
  }
};
const sendResetPasswordEmail = async (email, resetToken) => {
  try {
    const transporter = createTransporter();

    // T·∫°o reset URL v·ªõi token
    const resetURL = `${process.env.CLIENT_URL}/auth/reset-password?token=${resetToken}`;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u t√†i kho·∫£n',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <h2 style="color: #333; margin-bottom: 10px;">Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
            <p style="color: #666; font-size: 16px;">Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n</p>
          </div>
          
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <p style="margin: 0 0 15px 0; color: #333;">
              ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:
            </p>
            
            <div style="text-align: center; margin: 25px 0;">
              <a href="${resetURL}" 
                 style="background-color: #007bff; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
              </a>
            </div>
            
            <p style="margin: 15px 0 0 0; color: #666; font-size: 14px;">
              Ho·∫∑c copy v√† paste link sau v√†o tr√¨nh duy·ªát:
            </p>
            <p style="word-break: break-all; background-color: #e9ecef; padding: 10px; border-radius: 4px; font-family: monospace; font-size: 12px; color: #495057;">
              ${resetURL}
            </p>
          </div>
          
          <div style="border-top: 1px solid #eee; padding-top: 20px; margin-top: 30px;">
            <p style="color: #dc3545; font-weight: bold; margin-bottom: 10px;">
              ‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:
            </p>
            <ul style="color: #666; font-size: 14px; line-height: 1.6;">
              <li>Link n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong></li>
              <li>Ch·ªâ s·ª≠ d·ª•ng ƒë∆∞·ª£c <strong>m·ªôt l·∫ßn duy nh·∫•t</strong></li>
              <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
            </ul>
          </div>
          
          <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
            <p style="color: #999; font-size: 12px; margin: 0;">
              Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.<br>
              N·∫øu c·∫ßn h·ªó tr·ª£, li√™n h·ªá: <a href="mailto:${process.env.SUPPORT_EMAIL || process.env.EMAIL_USER}" style="color: #007bff;">${process.env.SUPPORT_EMAIL || process.env.EMAIL_USER}</a>
            </p>
          </div>
        </div>
      `,
      text: `
        Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
        
        Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.
        
        ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng truy c·∫≠p link sau:
        ${resetURL}
        
        L∆∞u √Ω:
        - Link n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 10 ph√∫t
        - Ch·ªâ s·ª≠ d·ª•ng ƒë∆∞·ª£c m·ªôt l·∫ßn duy nh·∫•t
        - N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y
        
        N·∫øu c·∫ßn h·ªó tr·ª£, li√™n h·ªá: ${process.env.SUPPORT_EMAIL || process.env.EMAIL_USER}
      `,
    };

    await transporter.sendMail(mailOptions);
    console.log('‚úÖ Reset password email sent successfully to:', email);
    console.log('üîó Reset URL:', resetURL);
  } catch (error) {
    console.error('‚ùå Error sending reset password email:', error);
    throw new Error('Failed to send reset password email');
  }
};

const sendPasswordResetConfirmation = async (email, name) => {
  try {
    const transporter = createTransporter();
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2>M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i</h2>
          <p>Xin ch√†o ${name},</p>
          <p>M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng v√†o l√∫c ${new Date().toLocaleString('vi-VN')}.</p>
          <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán h√†nh ƒë·ªông n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c.</p>
          <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© h·ªó tr·ª£</p>
        </div>
      `,
    };

    await transporter.sendMail(mailOptions);
    console.log('‚úÖ Password reset confirmation email sent to:', email);
  } catch (error) {
    console.error('‚ùå Error sending confirmation email:', error);
    throw new Error('Failed to send confirmation email');
  }
};

module.exports = { sendOTPEmail, sendResetPasswordEmail, sendPasswordResetConfirmation };
